{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-04T19:59:27.727Z",
    "end": "2022-03-04T20:00:03.643Z",
    "duration": 35916,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4ab2288b-c372-4bd2-bb3e-ef59acf8a2df",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6b42ba08-8b28-458f-9a94-efa112d4650d",
          "title": "Add todo first test",
          "fullFile": "C:\\Users\\Sohan\\Desktop\\seleniumDemo\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfully added first todo item in application",
              "fullTitle": "Add todo first test Successfully added first todo item in application",
              "timedOut": null,
              "duration": 32345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"firefox\").build();\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Sixth Item\", Key.RETURN);\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n            return value\n        }); //finding the xpath for the new entry in list and adding as new variable\n        todoText.should.equal(\"Sixth Item\"); //chai assertion for same todoText variable\n        await driver.quit();",
              "err": {},
              "uuid": "4f9090a1-685b-4c81-bff1-5cbdb45e8ea1",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4f9090a1-685b-4c81-bff1-5cbdb45e8ea1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 32345,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "e3037fdc-39eb-4f00-88d1-c0ee47ba03b7",
          "title": "Add todo second test",
          "fullFile": "C:\\Users\\Sohan\\Desktop\\seleniumDemo\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Successfully added second todo item in application",
              "fullTitle": "Add todo second test Successfully added second todo item in application",
              "timedOut": null,
              "duration": 33911,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let driver = await new Builder().forBrowser(\"firefox\").build();\n        await driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n        await driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Seventh Item\", Key.RETURN);\n        let todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n            return value\n        }); //finding the xpath for the new entry in list and adding as new variable\n        todoText.should.equal(\"Seventh Item\"); //chai assertion for same todoText variable\n        await driver.quit();",
              "err": {},
              "uuid": "294bb741-1b8d-4b67-ad07-28d6aef255a2",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "294bb741-1b8d-4b67-ad07-28d6aef255a2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 33911,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "9.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.1"
    },
    "marge": {
      "options": null,
      "version": "6.1.0"
    }
  }
}